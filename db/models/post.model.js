import mongoose from "mongoose";
const postSchema = new mongoose.Schema({
  title: { type: String, required: true },
  desc: { type: String, required: true },
  price: { type: Number, required: true },
  images: [{ type: String }],
  address: { type: String, required: true },
  location: { type: String, required: false },
  bedroom: { type: Number, required: true },
  bathroom: { type: Number, required: true },
  latitude: { type: String, required: false},
  longitude: { type: String, required: false },
  sqft: { type: Number, required: false },
  type: { type: String, enum: ["buy", "rent"], required: true },
  property: {
    type: String,
    enum: ["apartment", "house", "villa", "studio"],
    required: true,
  },

  city: {
    type: String,
    enum: [ "cairo",
      "alexandria",
      "giza",
      "port said",
      "suez",
      "luxor",
      "aswan",
      "tanta",
      "ismailia",
      "mansoura",
      "zagazig",
      "faiyum",
      "qena",
      "sohag",
      "minya",
      "damietta",
      "assiut",
  ],
    required: false,
  },
  Status: {
    type: String,
    enum: ["published", "sold", "under review"],
  },
  amenites: {
    type: [String],
    enum: [
      "air condtion",
      "heating",
      "floor",
      "elevator",
      "garden",
      "parking",
      "intercom",
      "security",
      "wifi",
      "window type",
      "pool",
      "sheard gym",
      "sherd spa",
      "fireplace",
      "cable tv",
    ],
    required: true,
  },
  featured: { type: Boolean },
  createdAt: { type: Date, default: Date.now },
  comments: [
    {
      user: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
      text: { type: String, required: true },
      createdAt: { type: Date, default: Date.now },
    },
  ],
  userId: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
});

export default mongoose.model("Post",Â postSchema);